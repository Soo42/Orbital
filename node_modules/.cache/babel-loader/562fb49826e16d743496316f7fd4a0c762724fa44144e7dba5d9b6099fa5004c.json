{"ast":null,"code":"var _jsxFileName = \"/Users/sjy/Downloads/Orbital-main-2/src/components/chat/Message.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (user) {\n        setCurrentUserId(user.id);\n      }\n    };\n    fetchUser();\n  }, []);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"messages\").select(\"content, created_at, username, avatar_url, user_id, id\").order(\"created_at\", {\n        ascending: true\n      });\n      if (!error && data) {\n        setMessages(data);\n      }\n    };\n    fetchMessages();\n  }, []);\n  const sendMessage = async () => {\n    var _user$user_metadata, _user$user_metadata2;\n    if (!input.trim()) return;\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    if (!user) {\n      alert(\"Please log in.\");\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 2000);\n      return;\n    }\n    const userMsg = {\n      id: `${Date.now()}`,\n      user_id: user.id,\n      content: input.trim(),\n      username: ((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.username) || \"anonymous\",\n      avatar_url: ((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.avatar_url) || \"\",\n      created_at: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    const {\n      error\n    } = await supabase.from(\"messages\").insert({\n      user_id: user.id,\n      content: userMsg.content,\n      username: userMsg.username,\n      avatar_url: userMsg.avatar_url\n    });\n    if (error) console.error(\"Something went wrong!!!\", error);\n\n    // setTimeout(() => {\n    //   const botMsg: Message = {\n    //     id: messages.length + 2,\n    //     sender: \"other user\",\n    //     content: `not implemented yet:`,\n    // };\n\n    // setMessages((prev: Message[]) => [...prev, botMsg]);\n    // }, 500);\n\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"500px\",\n        overflowY: \"auto\",\n        marginBottom: \"10px\"\n      },\n      children: messages.map(msg => {\n        const isCurrentUser = !!currentUserId && msg.user_id === currentUserId;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            // position: isPinMessage(msg.id) ? \"sticky\" : \"relative\",\n            // justifyContent: isCurrentUser ? \"flex-end\" : \"flex-start\",\n            backgroundColor: isCurrentUser ? \"#abcdef\" : \"#f8d7da\",\n            maxWidth: \"60%\",\n            width: \"fit-content\",\n            padding: \"10px\",\n            margin: \"5px 0\",\n            wordBreak: \"break-word\",\n            marginLeft: isCurrentUser ? \"auto\" : \"0\",\n            marginRight: isCurrentUser ? \"auto\" : \"0\",\n            color: \"black\"\n          },\n          children: msg.content\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        style: {\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          width: \"20%\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageInput, \"t1Q2idMUrZcUvzdEYdBVFIXC7dU=\", false, function () {\n  return [useNavigate];\n});\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","jsxDEV","_jsxDEV","MessageInput","_s","messages","setMessages","input","setInput","currentUserId","setCurrentUserId","navigate","fetchUser","data","user","auth","getUser","id","fetchMessages","error","from","select","order","ascending","sendMessage","_user$user_metadata","_user$user_metadata2","trim","alert","setTimeout","userMsg","Date","now","user_id","content","username","user_metadata","avatar_url","created_at","toISOString","prev","insert","console","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","marginBottom","map","msg","isCurrentUser","display","backgroundColor","width","wordBreak","marginLeft","marginRight","color","type","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/sjy/Downloads/Orbital-main-2/src/components/chat/Message.tsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from \"../../App\";\nimport { Message } from '../../types';\n\n\nfunction MessageInput() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [currentUserId, setCurrentUserId] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        setCurrentUserId(user.id);\n      }\n    };\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const { data, error } = await supabase\n        .from(\"messages\")\n        .select(\"content, created_at, username, avatar_url, user_id, id\")\n        .order(\"created_at\", { ascending: true });\n      if (!error && data) {\n        setMessages(data as Message[]);\n      } \n    };\n\n    fetchMessages();\n  }, []);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) {\n      alert(\"Please log in.\");\n      setTimeout(() => {\n        navigate(\"/login\"); \n      }, 2000);\n      return;\n    }\n\n  const userMsg: Message = {\n    id: `${Date.now()}`, \n    user_id: user.id,   \n    content: input.trim(),\n    username: user.user_metadata?.username || \"anonymous\",\n    avatar_url: user.user_metadata?.avatar_url || \"\",\n    created_at: new Date().toISOString()\n  };\n\n  setMessages((prev: Message[]) => [...prev, userMsg]);\n\n  const { error } = await supabase.from(\"messages\").insert({\n    user_id: user.id,\n    content: userMsg.content,\n    username: userMsg.username,\n    avatar_url: userMsg.avatar_url\n  });\n\n    if (error) console.error(\"Something went wrong!!!\", error);\n\n    // setTimeout(() => {\n    //   const botMsg: Message = {\n    //     id: messages.length + 2,\n    //     sender: \"other user\",\n    //     content: `not implemented yet:`,\n    // };\n\n    // setMessages((prev: Message[]) => [...prev, botMsg]);\n    // }, 500);\n\n    setInput(\"\");\n  };\n\n\n  return (\n    <div style={{ maxWidth: \"800px\", margin: \"auto\", padding: \"20px\" }}>\n        <h2>Chat Messages</h2>\n        <div\n            style={{\n                border: \"1px solid #ccc\",\n                padding: \"10px\",\n                height: \"500px\",\n                overflowY: \"auto\",\n                marginBottom: \"10px\",\n            }}\n        >\n        {messages.map((msg) => {\n            const isCurrentUser = !!currentUserId && msg.user_id === currentUserId;\n\n            return (\n                <div\n                    key={msg.id}\n                    style={{\n                        display: \"flex\",\n                        // position: isPinMessage(msg.id) ? \"sticky\" : \"relative\",\n                        // justifyContent: isCurrentUser ? \"flex-end\" : \"flex-start\",\n                        backgroundColor: isCurrentUser ? \"#abcdef\" : \"#f8d7da\",\n                        maxWidth: \"60%\",\n                        width: \"fit-content\", \n                        padding: \"10px\",\n                        margin: \"5px 0\",\n                        wordBreak: \"break-word\",\n                        marginLeft: isCurrentUser ? \"auto\" : \"0\",\n                        marginRight: isCurrentUser ? \"auto\" : \"0\", \n                        color: \"black\",\n                    }}\n                >\n                {msg.content}\n                </div>\n            );\n        })}\n        </div>\n        <div style={{display: \"flex\"}}><input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n            style={{ width: \"80%\", marginRight: \"10px\" }}/>\n            <button onClick={sendMessage} style={{width: \"20%\"}}>Send</button>\n        </div>\n    </div>\n  );\n}\n\nexport default MessageInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}